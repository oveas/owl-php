;
; This file contains the core configuration for OWL-PHP.
; It should NEVER be stored in or anywhere below the DOCUMENT_ROOT!
; Name and location of this file can be changed in TT_ROOT/config.php by changing
; the value of $GLOBALS['config']['configfiles']['tt']
;
;
; To make sure values are not displayed when the config array is dumped using
; print_r() or any other method, label the item name with '(hide)'.
; This is default for the database password.
;
;
; Some of the configuration issues can be overwritten with the dynamic configuration,
; in which case this file just provides some defaults.
; Use the database to change the values.

; General setting
[general]
	; Debug mode; when > 0, extra status changes will be made.
	; When the logging|log_level below is higher than TT_DEBUG, setting
	; debug to > 0 will only consume more CPU and produce no results in message logging.
	; However, this will result in loading tt.debug.functions.php i.s.o.
	; tt.nodebug.functions.php, and untranslated labels will be preceded by '(!)', and all calls
	; to TTdbg_add() will be evaluated; if the given 'level' bit in the 'debug' value below is 1,
	; the debug call will be handled.
	; Examples:
	;	0x00000000	(All bits off)
	; 	0x00200027	(TTDEBUG_APP_VAR & TTDEBUG_APP_OBJ & TTDEBUG_APP_FUN
	;				 & TTDEBUG_APP_SQL & TTDEBUG_TT_SQL)
	;	0x00a501ef	(TTDEBUG_APP_VAR & TTDEBUG_APP_OBJ & TTDEBUG_APP_FUN
	;				 & TTDEBUG_APP_BLK & TTDEBUG_APP_SQL & TTDEBUG_APP_RET
	;				 & TTDEBUG_APP_RES & TTDEBUG_APP_S01 & TTDEBUG_TT_VAR
	;				 & TTDEBUG_TT_FUN & TTDEBUG_TT_SQL & TTDEBUG_TT_RES)
	;	0x00ff00ff	(All bits except the reserved S01 - S08 for TT and the Application)
	;	0x0a0013bf	(All bits except the reserved S01 - S08 for TT)
	;	0xffffffff	(All bits on)
	debug = 0x0

	; If set to true, all messages are signalled using the JavaScript 'alert()' function.
	; Otherwise, the message text is written to the output stream.
	; (this setting is probable deprecated)
	js_signal = true

	; Character set
	charset = UTF-8

	; Key to use for en- & decryptions. This setting cannot be hidden!
	crypt_key = @AI!zz3sz`!vjeq!`q'wsdf/awhg}vi

[layout]
	; Name of the layout that defines the page position, colors etc.
	layout = ttlayout


; Specify how to connect to the database
[database]

	; Database driver.Supported drivers must exist in TT_ROOT/drivers/db, where the
	; classname is case sensitive and the filename must be lowercase.
	; This setting should not be overwritten by applications. This is prevented by the '(!)'
	(!)driver = MySQL_i

	; Prefix for table names
	prefix = tt_

	; Set the following to true (default) to use the TT tables for core functionality.
	; The TT tables that will be used are all tables with the ttprefix (e.g. to sore the
	; basic user info and the session data).
	; You shouldn't set this to false when running multiple applications!
	;tttables = true

	; Prefix for TT core table names.
	(!)ttprefix = tt_

	; Quotes or backticks used for enclosing field and table names. Since this also applies
	; to the TT core tables, it can not be overwritten by the application (e.g. in Oracle
	; that might cause conflicts in case sensitivity)
	(!)quotes = `

	; Name of the database server
	server = localhost

	; Name of the database. For Oracle, that would be the tablespace
	name = terraterra

	; The ORACLE_SID, ignored for all other database drivers.
	; Leave outcommented if ORACLE_SID is set in /etc/apache2/envvars
	;(!)ora_sid = XE

	; User to connect with
	user = ttuser

	; Password to connect with (this item is hidden when the config
	; array is shown; see above)
	(hide)passwd = ttuser

; Logging information
[logging]

	; When set to TRUE, each run creates an own logfile
	multiple_file = false

	; When set to TRUE, the logfile will remain opened throughout the run
	persistant = true

	; The name of the logfile
	filename = TT_LOG/tt.log

	; Severity level at which status changes will be written to the logfile
	log_level = TT_DEBUG
	;log_level = TT_WARNING

	; Severity level at which status changes will be written to the console
	log_console = TT_WARNING

	; Severity level at which traceback information is written to the logfile
	; To disable this completely, make sure it's higher than (or equals to)
	; [exception]throw_level below
	trace_level = TT_CRITICAL

	; Severity level at which a traceback (file and line) is added to the message. This differs from a complete
	; traceback above in a way this becomes part of the message and can also be displayed in the browser (e.g. the console)
	; The traces will only be added when the user has the showtraces right.
	log_caller_level = TT_WARNING
	
	; Depth of the traceback that will be added to messages. A negative value means unlimited, 0 disables it.
	; When using positive values, anything < 3 is useless since the first 2 traces are internal TT and will be ignored.
	log_caller_depth = 4
	
	; Set to TRUE to make sure passwords are never written to the logfile
	hide_passwords  = true

	; Specify which TT generated PHP messages will be written to the PHP errorlog (if enabled)
	; Set to -1 to disable the PHP errorlog for TT messages
	; The following severity levels are written when set here:
	; - E_USER_NOTICE: TT_INFO
	; - E_USER_WARNING: TT_WARNING and TT_BUG
	; - E_USER_ERROR; TT_ERROR and above (logged as warnings; see below)
	; Note: When E_USER_ERROR is included here, all error messages will be written to the php_errorlog
	;       as warnings to prevent PHP from terminating immediately, skipping the TT rundown
	; Note: Only E_USER_* constants are supported here.
	; Note: When display_errors is set on 'On' the the PHP ini file, messages will also be
	;       shown in the browser.
	write_phplog = E_USER_NOTICE | E_USER_WARNING

; Exception handling
[exception]

	; When set to TRUE, traceback information is displayed in the browsed.
	; If this is FALSE, the tracing info is only in the logfile and the browser
	; will show a messages refering to the logfile.
	show_in_browser = true

	; When set to TRUE, all function calls will be shown including their parameters, otherwise
	; just the datatype (both in the logfile and the browser).
	; Default is false
	show_values = true

	; When show_values is FALSE, this is ignored. Otherwise is't the maximum number of characters
	; of the parameter values that are shown.
	; Default is 30
	max_value_len = 30

	; Minimum severity level to throw exceptions
	throw_level = TT_BUG

	; To prevent certain aguments, like passwords, to be displayed in stackdumps,
	; they can be given in a comma-seperated list as <classname>-><method>:<argument-count>
	hide_arguments = User->login:2,User->hashPassword:1,User->register:3,User->register:4


; Locale information. All of these will be overwritten with the dynamic config
; in the database; these are just the defaults and used during initialisation
[locale]

	; Format of displayed date values
	date = d-M-Y

	; Format of displayed time values
	time = H:i

	; Format of displayed datetime values
	datetime = d-M-Y H:i:s

	; Format of the date in logging timestamps
	log_date = d-m-Y

	; Format of the time in logging timestamps
	log_time = H:i:s.u

	; Language
	lang = en-uk

; Session information
[session]

	; Encryption method to use for passwords
	password_crypt = sha1

	; Lifetime for a session in seconds, can be overwritten with dynamic config
	lifetime = 1440

	; Minimal password strength: 0 (no password) - 10 (very strong password)
	; 2 is normal for regular sites, 3 is strong.
	; Set to 0 to disable this check (e.g. when a JavaScript check is used)
	; Can be overwritten with dynamic config
	pwd_minstrength = 3

	; Session cookie name
	name = TTSession
